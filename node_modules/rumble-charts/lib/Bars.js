"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _map2 = _interopRequireDefault(require("lodash/map"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _value = _interopRequireDefault(require("./helpers/value"));

var _normalizeNumber = _interopRequireDefault(require("./helpers/normalizeNumber"));

var _colorFunc = _interopRequireDefault(require("./helpers/colorFunc"));

var _propTypes2 = _interopRequireDefault(require("./helpers/propTypes"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Renders bars for your bar chart.
 *
 * @example ../docs/examples/Bars.md
 */
var Bars = /*#__PURE__*/function (_Component) {
  _inherits(Bars, _Component);

  var _super = _createSuper(Bars);

  function Bars(props) {
    var _this;

    _classCallCheck(this, Bars);

    _this = _super.call(this, props);
    _this.getPaddings = _this.getPaddings.bind(_assertThisInitialized(_this));
    _this.getBarWidth = _this.getBarWidth.bind(_assertThisInitialized(_this));
    _this.renderSeries = _this.renderSeries.bind(_assertThisInitialized(_this));
    _this.renderBar = _this.renderBar.bind(_assertThisInitialized(_this));
    return _this;
  } // helpers


  _createClass(Bars, [{
    key: "getPaddings",
    value: function getPaddings() {
      var props = this.props;
      var innerPadding = props.innerPadding,
          groupPadding = props.groupPadding,
          layerWidth = props.layerWidth;
      innerPadding = (0, _value["default"])(innerPadding, props);
      innerPadding = (0, _normalizeNumber["default"])(innerPadding, layerWidth);
      groupPadding = (0, _value["default"])(groupPadding, props);
      groupPadding = (0, _normalizeNumber["default"])(groupPadding, layerWidth);
      return {
        innerPadding: innerPadding,
        groupPadding: groupPadding
      };
    }
  }, {
    key: "getBarWidth",
    value: function getBarWidth() {
      var props = this.props,
          x = this.x;
      var barWidth = props.barWidth,
          layerWidth = props.layerWidth;

      var _this$getPaddings = this.getPaddings(props),
          innerPadding = _this$getPaddings.innerPadding,
          groupPadding = _this$getPaddings.groupPadding;

      if (barWidth) {
        barWidth = (0, _value["default"])(barWidth, props);
        return (0, _normalizeNumber["default"])(barWidth, layerWidth);
      } else {
        var baseWidth = Math.abs(x(1) - x(0));

        if (props.combined) {
          return baseWidth - innerPadding;
        } else {
          return (baseWidth - groupPadding) / (props.series || []).length - innerPadding;
        }
      }
    } // render

  }, {
    key: "renderSeries",
    value: function renderSeries(series, index) {
      var _this2 = this;

      var x = this.x,
          y = this.y,
          barWidth = this.barWidth,
          props = this.props;
      var scaleX = props.scaleX,
          scaleY = props.scaleY,
          className = props.className;
      var seriesVisible = props.seriesVisible,
          seriesStyle = props.seriesStyle,
          seriesAttributes = props.seriesAttributes;
      seriesVisible = (0, _value["default"])(seriesVisible, {
        seriesIndex: index,
        series: series,
        props: props
      });

      if (!seriesVisible) {
        return;
      }

      seriesAttributes = (0, _value["default"])(seriesAttributes, {
        seriesIndex: index,
        series: series,
        props: props
      });
      seriesStyle = (0, _value["default"])(seriesStyle, {
        seriesIndex: index,
        series: series,
        props: props
      });
      var deltaX = 0;

      if (!props.combined) {
        deltaX = barWidth * index - (props.series.length - 1) * 0.5 * barWidth + (index - (props.series.length - 1) / 2) * this.innerPadding;
      }

      return _react["default"].createElement("g", _extends({
        key: index,
        className: className && className + '-series ' + className + '-series-' + index,
        opacity: series.opacity,
        style: seriesStyle
      }, seriesAttributes), series && (0, _map2["default"])(series.data, function (point, pointIndex) {
        var y0 = point.y0 ? y(point.y0) : _this2._y0;
        var y1 = y(point.y);
        var x1 = x(point.x) + deltaX * (scaleX.direction || 1);

        if (scaleX.swap || scaleY.swap) {
          return _this2.renderBar(y1, x1, y0 - y1, barWidth, index, pointIndex, point);
        } else {
          return _this2.renderBar(x1, y1, barWidth, y0 - y1, index, pointIndex, point);
        }
      }));
    }
  }, {
    key: "renderBar",
    value: function renderBar(x, y, width, height, seriesIndex, pointIndex, point) {
      var props = this.props;
      var className = props.className,
          scaleX = props.scaleX,
          scaleY = props.scaleY;
      var barVisible = props.barVisible,
          barAttributes = props.barAttributes,
          barStyle = props.barStyle,
          groupStyle = props.groupStyle;
      var series = props.series[seriesIndex];
      barVisible = (0, _value["default"])(barVisible, {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });

      if (!barVisible) {
        return;
      }

      groupStyle = (0, _value["default"])(groupStyle, {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });
      var d = scaleX.swap || scaleY.swap ? 'M0,' + -height / 2 + ' h' + width + ' v' + height + ' h' + -width + ' Z' : 'M' + -width / 2 + ',0 v' + height + ' h' + width + ' v' + -height + ' Z';
      barAttributes = (0, _value["default"])(barAttributes, {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });
      barStyle = (0, _value["default"])([point.style, series.style, barStyle], {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });
      return _react["default"].createElement("g", {
        key: pointIndex,
        className: className && className + '-bar ' + className + '-bar-' + pointIndex,
        transform: 'translate(' + x + ' ' + y + ')',
        style: groupStyle
      }, _react["default"].createElement("path", _extends({
        style: barStyle,
        fill: point.color || series.color || this.color(seriesIndex),
        fillOpacity: point.opacity,
        d: d
      }, barAttributes)));
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var className = props.className,
          style = props.style,
          colors = props.colors,
          opacity = props.opacity;
      this.x = props.scaleX.factory(props);
      this.y = props.scaleY.factory(props);
      var domainX = this.x.domain();
      var naturalDirection = domainX[1] > domainX[0];

      if (domainX[0] === props.minX || domainX[0] === props.maxX) {
        this.x.domain([domainX[0] + (naturalDirection ? -0.5 : 0.5), domainX[1]]);
        domainX = this.x.domain();
      }

      if (domainX[1] === props.minX || domainX[1] === props.maxX) {
        this.x.domain([domainX[0], domainX[1] + (naturalDirection ? 0.5 : -0.5)]);
      }

      this.innerPadding = this.getPaddings().innerPadding;
      this.barWidth = this.getBarWidth();
      this._y0 = this.y(0);
      this.color = (0, _colorFunc["default"])(colors);
      return _react["default"].createElement("g", {
        className: className,
        style: style,
        opacity: opacity
      }, (0, _map2["default"])(props.series, this.renderSeries));
    }
  }]);

  return Bars;
}(_react.Component);

exports["default"] = Bars;
Bars.displayName = 'Bars';
Bars.propTypes = {
  className: _propTypes["default"].string,

  /**
   * Colors
   */
  colors: _propTypes["default"].oneOfType([_propTypes["default"].oneOf(['category10', 'category20', 'category20b', 'category20c', 'accent', 'dark2', 'paired', 'pastel1', 'pastel2', 'set1', 'set2', 'set3', 'tableau10']), _propTypes["default"].arrayOf(_propTypes["default"].string), _propTypes["default"].func]),
  opacity: _propTypes["default"].number,
  style: _propTypes["default"].object,
  combined: _propTypes["default"].bool,
  groupPadding: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string, _propTypes["default"].func]),
  innerPadding: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string, _propTypes["default"].func]),
  seriesVisible: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].func]),
  seriesAttributes: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  seriesStyle: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  groupStyle: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  barVisible: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].func]),
  barAttributes: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  barStyle: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  barWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string, _propTypes["default"].func]),
  layerWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  layerHeight: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  seriesIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].array, _propTypes["default"].func]),
  series: _propTypes2["default"].series,
  scaleX: _propTypes["default"].object,
  scaleY: _propTypes["default"].object,
  minX: _propTypes["default"].number,
  maxX: _propTypes["default"].number,
  minY: _propTypes["default"].number,
  maxY: _propTypes["default"].number
};
Bars.defaultProps = {
  groupPadding: 0,
  innerPadding: 0,
  colors: 'category20',
  seriesVisible: true,
  barVisible: true
};