"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _map2 = _interopRequireDefault(require("lodash/map"));

var _range2 = _interopRequireDefault(require("lodash/range"));

var _forEach2 = _interopRequireDefault(require("lodash/forEach"));

var _assign2 = _interopRequireDefault(require("lodash/assign"));

var _uniq2 = _interopRequireDefault(require("lodash/uniq"));

var _isArray2 = _interopRequireDefault(require("lodash/isArray"));

var _isEmpty2 = _interopRequireDefault(require("lodash/isEmpty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _d3Scale = require("d3-scale");

var _d3Shape = require("d3-shape");

var _d3Interpolate = require("d3-interpolate");

var _normalizeNumber = _interopRequireDefault(require("./helpers/normalizeNumber"));

var _value = _interopRequireDefault(require("./helpers/value"));

var _colorFunc = _interopRequireDefault(require("./helpers/colorFunc"));

var _getCoords = _interopRequireDefault(require("./helpers/getCoords"));

var _propTypes2 = _interopRequireDefault(require("./helpers/propTypes"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var maxAngle = 2 * Math.PI;
/**
 * Renders pies for you pie chart or donut chart
 *
 * @example ../docs/examples/Pies.md
 */

var Pies = /*#__PURE__*/function (_Component) {
  _inherits(Pies, _Component);

  var _super = _createSuper(Pies);

  function Pies(props) {
    var _this;

    _classCallCheck(this, Pies);

    _this = _super.call(this, props);
    _this.getInnerRadius = _this.getInnerRadius.bind(_assertThisInitialized(_this));
    _this.getPaddings = _this.getPaddings.bind(_assertThisInitialized(_this));
    _this.getPieWidth = _this.getPieWidth.bind(_assertThisInitialized(_this));
    _this.renderArc = _this.renderArc.bind(_assertThisInitialized(_this));
    return _this;
  } // helpers


  _createClass(Pies, [{
    key: "getOuterRadius",
    value: function getOuterRadius(props) {
      return Math.min(props.layerWidth, props.layerHeight) / 2;
    }
  }, {
    key: "getInnerRadius",
    value: function getInnerRadius(props) {
      return (0, _normalizeNumber["default"])(props.innerRadius, this.getOuterRadius(props));
    }
  }, {
    key: "getPaddings",
    value: function getPaddings(props) {
      var innerPadding = props.innerPadding,
          groupPadding = props.groupPadding;
      var outerRadius = this.getOuterRadius(props);
      innerPadding = (0, _normalizeNumber["default"])(innerPadding, outerRadius) || 0;
      groupPadding = (0, _normalizeNumber["default"])(groupPadding, outerRadius) || 0;
      return {
        innerPadding: innerPadding,
        groupPadding: groupPadding
      };
    }
  }, {
    key: "getPieWidth",
    value: function getPieWidth(x, props) {
      var pieWidth = props.pieWidth;

      var _this$getPaddings = this.getPaddings(props),
          innerPadding = _this$getPaddings.innerPadding,
          groupPadding = _this$getPaddings.groupPadding;

      if (pieWidth) {
        return (0, _normalizeNumber["default"])(pieWidth, this.getOuterRadius(props));
      } else {
        var baseWidth = Math.abs(x(1) - x(0));

        if (props.combined) {
          return baseWidth - innerPadding;
        } else {
          var seriesCount = (0, _isEmpty2["default"])(props.series) ? 1 : props.series.length;
          return (baseWidth - groupPadding) / seriesCount - innerPadding;
        }
      }
    } // render

  }, {
    key: "renderArcPart",
    value: function renderArcPart(_ref) {
      var startAngle = _ref.startAngle,
          endAngle = _ref.endAngle,
          maxAngle = _ref.maxAngle,
          pathProps = _ref.pathProps,
          arc = _ref.arc,
          key = _ref.key;
      var pathList = [];
      var lapIndex = 0;

      while (endAngle >= 4 * Math.PI) {
        endAngle -= 2 * Math.PI;

        if (endAngle < startAngle) {
          startAngle -= 2 * Math.PI;
        }
      }

      var lapsCount = Math.abs((endAngle - startAngle) / maxAngle);

      while (lapIndex < lapsCount) {
        var d = arc({
          startAngle: startAngle,
          endAngle: Math.min(startAngle + maxAngle, endAngle)
        });
        startAngle += maxAngle;
        pathList.push(_react["default"].createElement("path", _extends({
          key: '' + key + lapIndex
        }, pathProps, {
          d: d
        })));
        lapIndex++;
      }

      return pathList;
    }
  }, {
    key: "renderArc",
    value: function renderArc(startAngle, endAngle, radius, pieWidth, seriesIndex, pointIndex, point) {
      var _this2 = this;

      var props = this.props;
      var className = props.className;
      var pieVisible = props.pieVisible,
          pieAttributes = props.pieAttributes,
          pieStyle = props.pieStyle,
          groupStyle = props.groupStyle,
          cornerRadius = props.cornerRadius;
      var series = props.series[seriesIndex];
      pieVisible = (0, _value["default"])(pieVisible, {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });

      if (!pieVisible) {
        return;
      }

      var halfWidth = pieWidth / 2;
      cornerRadius = (0, _value["default"])(cornerRadius, {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });
      var arc = (0, _d3Shape.arc)().cornerRadius((0, _normalizeNumber["default"])(cornerRadius, pieWidth)).padRadius(10).innerRadius(radius - halfWidth).outerRadius(radius + halfWidth);
      var fillColor = point.color || series.color || this.color(seriesIndex);

      if ((0, _isArray2["default"])(fillColor) && (0, _uniq2["default"])(fillColor).length === 1) {
        fillColor = fillColor[0];
      }

      pieStyle = (0, _value["default"])([point.style, series.style, pieStyle], {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });
      pieAttributes = (0, _value["default"])(pieAttributes, {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });
      var pathProps = (0, _assign2["default"])({
        style: pieStyle,
        fill: fillColor,
        fillOpacity: point.opacity
      }, pieAttributes);
      var pathList = []; // fill color interpolation

      if ((0, _isArray2["default"])(fillColor)) {
        var interpolateAngle = (0, _d3Interpolate.interpolate)(startAngle, endAngle);
        (0, _forEach2["default"])(fillColor, function (color, index) {
          if (index === fillColor.length - 1) {
            return;
          }

          var interpolateFillColor = (0, _d3Interpolate.interpolate)(color, fillColor[index + 1]);
          var step = 1 / ((endAngle - startAngle) / _this2.props.gradientStep);
          (0, _forEach2["default"])((0, _range2["default"])(0, 1, step), function (i) {
            pathProps.fill = interpolateFillColor(i);
            var angleIndex = (index + i) / (fillColor.length - 1);
            pathList = pathList.concat(_this2.renderArcPart({
              startAngle: interpolateAngle(angleIndex),
              endAngle: interpolateAngle(angleIndex + step),
              maxAngle: maxAngle,
              pathProps: pathProps,
              arc: arc,
              key: i
            }));
          });
        });
      } else {
        pathList = this.renderArcPart({
          startAngle: startAngle,
          endAngle: endAngle,
          maxAngle: maxAngle,
          pathProps: pathProps,
          arc: arc,
          key: pointIndex
        });
      }

      groupStyle = (0, _value["default"])(groupStyle, {
        seriesIndex: seriesIndex,
        pointIndex: pointIndex,
        point: point,
        series: series,
        props: props
      });
      return _react["default"].createElement("g", {
        key: pointIndex,
        className: className && className + '-pie ' + className + '-pie-' + pointIndex,
        style: groupStyle
      }, pathList);
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var props = this.props;
      var className = props.className,
          style = props.style,
          minX = props.minX,
          maxX = props.maxX,
          minY = props.minY,
          maxY = props.maxY,
          position = props.position,
          layerWidth = props.layerWidth,
          layerHeight = props.layerHeight,
          colors = props.colors,
          opacity = props.opacity;
      var innerRadius = this.getInnerRadius(props);
      var outerRadius = this.getOuterRadius(props);
      var radialScale = (0, _d3Scale.scaleLinear)().range([outerRadius, innerRadius]).domain(props.scaleX.direction >= 0 ? [minX - 0.5, maxX + 0.5] : [maxX + 0.5, minX - 0.5]);
      var circularScale = (0, _d3Scale.scaleLinear)().range([props.startAngle, props.endAngle]).domain(props.scaleY.direction >= 0 ? [minY, maxY] : [maxY, minY]);
      var series = props.series;

      var _this$getPaddings2 = this.getPaddings(props),
          innerPadding = _this$getPaddings2.innerPadding;

      var pieWidth = this.getPieWidth(radialScale, props);

      var _startAngle = circularScale(0);

      this.color = (0, _colorFunc["default"])(colors);
      var coords = (0, _getCoords["default"])(position || '', layerWidth, layerHeight, outerRadius * 2, outerRadius * 2);
      var halfPadAngle = props.padAngle / 2 || 0;
      return _react["default"].createElement("g", {
        className: className,
        style: style,
        transform: 'translate(' + (coords.x + outerRadius) + ' ' + (coords.y + outerRadius) + ')',
        opacity: opacity
      }, (0, _map2["default"])(series, function (series, index) {
        var seriesVisible = props.seriesVisible,
            seriesAttributes = props.seriesAttributes,
            seriesStyle = props.seriesStyle;
        seriesVisible = (0, _value["default"])(seriesVisible, {
          seriesIndex: index,
          series: series,
          props: props
        });

        if (!seriesVisible) {
          return;
        }

        seriesAttributes = (0, _value["default"])(seriesAttributes, {
          seriesIndex: index,
          series: series,
          props: props
        });
        seriesStyle = (0, _value["default"])(seriesStyle, {
          seriesIndex: index,
          series: series,
          props: props
        });
        var deltaRadial = 0;

        if (!props.combined) {
          deltaRadial = pieWidth * index - (props.series.length - 1) * 0.5 * pieWidth + (index - (props.series.length - 1) / 2) * innerPadding;
        }

        return _react["default"].createElement("g", _extends({
          key: index,
          className: className && className + '-series ' + className + '-series-' + index,
          style: seriesStyle,
          opacity: series.opacity
        }, seriesAttributes), (0, _map2["default"])(series.data, function (point, pointIndex) {
          var startAngle = (point.y0 ? circularScale(point.y0) : _startAngle) + halfPadAngle;
          var endAngle = circularScale(point.y) - halfPadAngle;
          var radius = radialScale(point.x) - deltaRadial * (props.scaleX.direction || 1);
          return _this3.renderArc(startAngle, endAngle, radius, pieWidth, index, pointIndex, point);
        }));
      }));
    }
  }]);

  return Pies;
}(_react.Component);

exports["default"] = Pies;
Pies.displayName = 'Pies';
Pies.propTypes = {
  colors: _propTypes["default"].oneOfType([_propTypes["default"].oneOf(['category10', 'category20', 'category20b', 'category20c', 'accent', 'dark2', 'paired', 'pastel1', 'pastel2', 'set1', 'set2', 'set3', 'tableau10']), _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].string])), _propTypes["default"].func]),
  opacity: _propTypes["default"].number,
  style: _propTypes["default"].object,
  className: _propTypes["default"].string,
  position: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].string]),
  innerRadius: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  cornerRadius: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string, _propTypes["default"].func]),
  innerPadding: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  groupPadding: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  combined: _propTypes["default"].bool,
  startAngle: _propTypes["default"].number,
  endAngle: _propTypes["default"].number,
  padAngle: _propTypes["default"].number,
  gradientStep: _propTypes["default"].number,
  seriesVisible: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].func]),
  seriesAttributes: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  seriesStyle: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  groupStyle: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  pieVisible: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].func]),
  pieAttributes: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  pieStyle: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].func]),
  pieWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  seriesIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].array, _propTypes["default"].func]),
  series: _propTypes2["default"].series,
  minX: _propTypes["default"].number,
  maxX: _propTypes["default"].number,
  minY: _propTypes["default"].number,
  maxY: _propTypes["default"].number,
  layerWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  layerHeight: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  scaleX: _propTypes["default"].object,
  scaleY: _propTypes["default"].object
};
Pies.defaultProps = {
  colors: 'category20',
  seriesVisible: true,
  pieVisible: true,
  startAngle: 0,
  endAngle: maxAngle,
  padAngle: 0,
  innerRadius: 0,
  cornerRadius: 0,
  groupPadding: 0,
  innerPadding: 0,
  position: 'center middle',
  gradientStep: 0.01
};