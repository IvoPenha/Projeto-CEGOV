"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = getCoords;

var _isUndefined2 = _interopRequireDefault(require("lodash/isUndefined"));

var _isArray2 = _interopRequireDefault(require("lodash/isArray"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _isString2 = _interopRequireDefault(require("lodash/isString"));

var _normalizeNumber = _interopRequireDefault(require("./normalizeNumber"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function getCoords(position, layerWidth, layerHeight) {
  var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
  var height = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;

  if ((0, _isString2["default"])(position)) {
    position = (0, _map2["default"])(position.trim().split(' '), function (value) {
      return value.trim();
    });
  }

  if ((0, _isArray2["default"])(position)) {
    position = (0, _map2["default"])(position, function (pos) {
      return (0, _isString2["default"])(pos) ? pos.trim().toLowerCase() : pos;
    });

    var _position = position,
        _position2 = _slicedToArray(_position, 2),
        x = _position2[0],
        y = _position2[1];

    if (['top', 'bottom', 'middle'].indexOf(position[0]) !== -1) {
      y = position[0];
    }

    if (['left', 'right', 'center'].indexOf(position[1]) !== -1) {
      x = position[1];
    }

    if ((0, _isString2["default"])(x)) {
      if (x === 'left') {
        x = 0;
      } else if (x === 'right') {
        x = layerWidth - width;
      } else if (x === 'center') {
        x = (layerWidth - width) / 2;
      } else {
        x = (0, _normalizeNumber["default"])(x, layerWidth);
      }
    } else if ((0, _isUndefined2["default"])(x)) {
      x = 0;
    }

    if ((0, _isString2["default"])(y)) {
      if (y === 'top') {
        y = 0;
      } else if (y === 'bottom') {
        y = layerHeight - height;
      } else if (y === 'middle') {
        y = (layerHeight - height) / 2;
      } else {
        y = (0, _normalizeNumber["default"])(y, layerHeight);
      }
    } else if ((0, _isUndefined2["default"])(y)) {
      y = 0;
    }

    return {
      x: x,
      y: y
    };
  } else {
    return {
      x: 0,
      y: 0
    };
  }
}