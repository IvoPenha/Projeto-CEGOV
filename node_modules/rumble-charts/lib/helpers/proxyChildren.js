"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = proxyChildren;

var _omitBy2 = _interopRequireDefault(require("lodash/omitBy"));

var _filter2 = _interopRequireDefault(require("lodash/filter"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _isArray2 = _interopRequireDefault(require("lodash/isArray"));

var _isNumber2 = _interopRequireDefault(require("lodash/isNumber"));

var _isUndefined2 = _interopRequireDefault(require("lodash/isUndefined"));

var _defaults2 = _interopRequireDefault(require("lodash/defaults"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _defaultsDeep2 = _interopRequireDefault(require("lodash/defaultsDeep"));

var _assign2 = _interopRequireDefault(require("lodash/assign"));

var _pick2 = _interopRequireDefault(require("lodash/pick"));

var _react = _interopRequireDefault(require("react"));

var _normalizeSeries = _interopRequireDefault(require("./normalizeSeries"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var limitsPropNames = ['maxX', 'maxY', 'minX', 'minY'];

function proxyChildren(children) {
  var seriesProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var limits = (0, _pick2["default"])(seriesProps, limitsPropNames);
  seriesProps = (0, _normalizeSeries["default"])(seriesProps);
  var limitsCalculated = (0, _pick2["default"])(seriesProps, limitsPropNames);
  var _seriesProps = seriesProps,
      series = _seriesProps.series;
  return _react["default"].Children.map(children, function (child) {
    if (!child) {
      return child;
    }

    var props = {};
    (0, _assign2["default"])(props, child.props);
    (0, _defaultsDeep2["default"])(props, (0, _isFunction2["default"])(extraProps) ? extraProps(child) : extraProps);
    var childLimits = (0, _pick2["default"])(child.props, limitsPropNames);
    var childSeriesProps = (0, _normalizeSeries["default"])((0, _defaults2["default"])(child.props, {
      layerWidth: props.layerWidth,
      layerHeight: props.layerHeight
    }));
    var childLimitsCalculated = (0, _pick2["default"])(childSeriesProps, limitsPropNames);
    (0, _defaults2["default"])(props, childLimits, limits, childLimitsCalculated, limitsCalculated);

    if (!child.props.series) {
      if ((0, _isUndefined2["default"])(child.props.seriesIndex)) {
        props.series = series;
      } else if ((0, _isNumber2["default"])(child.props.seriesIndex)) {
        props.series = [series[child.props.seriesIndex]];
      } else if ((0, _isArray2["default"])(child.props.seriesIndex)) {
        props.series = (0, _map2["default"])(child.props.seriesIndex, function (index) {
          return series[index];
        });
      } else if ((0, _isFunction2["default"])(child.props.seriesIndex)) {
        props.series = (0, _filter2["default"])(series, child.props.seriesIndex);
      } else {
        props.series = series;
      }
    } else {
      props.series = childSeriesProps.series;
    }

    props.seriesNormalized = true;
    props = (0, _omitBy2["default"])(props, _isUndefined2["default"]);
    return _react["default"].cloneElement(child, props);
  });
}