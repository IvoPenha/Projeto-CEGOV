"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _isUndefined2 = _interopRequireDefault(require("lodash/isUndefined"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var counter = 0;

var propTypePoint = _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]));

var propTypeNumber = _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]);

var Gradient = /*#__PURE__*/function (_Component) {
  _inherits(Gradient, _Component);

  var _super = _createSuper(Gradient);

  function Gradient(props) {
    var _this;

    _classCallCheck(this, Gradient);

    _this = _super.call(this, props);
    _this.getId = _this.getId.bind(_assertThisInitialized(_this));
    _this.getLink = _this.getLink.bind(_assertThisInitialized(_this));
    _this.renderRadial = _this.renderRadial.bind(_assertThisInitialized(_this));
    _this.renderLinear = _this.renderLinear.bind(_assertThisInitialized(_this));
    return _this;
  } // helpers


  _createClass(Gradient, [{
    key: "getId",
    value: function getId() {
      if (this.props.id) {
        return this.props.id;
      }

      if (!this._id) {
        counter++;
        this._id = this.props.idPrefix + counter;
      }

      return this._id;
    }
  }, {
    key: "getLink",
    value: function getLink() {
      return 'url(#' + this.getId() + ')';
    } // render

  }, {
    key: "renderRadial",
    value: function renderRadial() {
      var _this$props = this.props,
          center = _this$props.center,
          focalPoint = _this$props.focalPoint,
          radius = _this$props.radius,
          gradientUnits = _this$props.gradientUnits,
          spreadMethod = _this$props.spreadMethod,
          gradientTransform = _this$props.gradientTransform,
          cx = _this$props.cx,
          cy = _this$props.cy,
          fx = _this$props.fx,
          fy = _this$props.fy,
          r = _this$props.r;

      var _cx = (0, _isUndefined2["default"])(cx) ? center && center[0] : cx;

      var _cy = (0, _isUndefined2["default"])(cy) ? center && center[1] : cy;

      var _fx = (0, _isUndefined2["default"])(fx) ? focalPoint && focalPoint[0] : fx;

      var _fy = (0, _isUndefined2["default"])(fy) ? focalPoint && focalPoint[1] : fy;

      var _r = (0, _isUndefined2["default"])(r) ? radius : r;

      return _react["default"].createElement("radialGradient", {
        id: this.getId(),
        gradientUnits: gradientUnits,
        gradientTransform: gradientTransform,
        spreadMethod: spreadMethod,
        cx: _cx,
        cy: _cy,
        fx: _fx,
        fy: _fy,
        r: _r
      }, this.props.children);
    }
  }, {
    key: "renderLinear",
    value: function renderLinear() {
      var _this$props2 = this.props,
          from = _this$props2.from,
          to = _this$props2.to,
          gradientUnits = _this$props2.gradientUnits,
          spreadMethod = _this$props2.spreadMethod,
          gradientTransform = _this$props2.gradientTransform,
          x1 = _this$props2.x1,
          y1 = _this$props2.y1,
          x2 = _this$props2.x2,
          y2 = _this$props2.y2;

      var _x1 = (0, _isUndefined2["default"])(x1) ? from && from[0] : x1;

      var _y1 = (0, _isUndefined2["default"])(y1) ? from && from[1] : y1;

      var _x2 = (0, _isUndefined2["default"])(x2) ? to && to[0] : x2;

      var _y2 = (0, _isUndefined2["default"])(y2) ? to && to[1] : y2;

      return _react["default"].createElement("linearGradient", {
        id: this.getId(),
        gradientUnits: gradientUnits,
        gradientTransform: gradientTransform,
        spreadMethod: spreadMethod,
        x1: _x1,
        y1: _y1,
        x2: _x2,
        y2: _y2
      }, this.props.children);
    }
  }, {
    key: "render",
    value: function render() {
      var type = this.props.type;

      if (type === 'radial') {
        return this.renderRadial();
      } else {
        return this.renderLinear();
      }
    }
  }]);

  return Gradient;
}(_react.Component);

exports["default"] = Gradient;
Gradient.displayName = 'Gradient';
Gradient.propTypes = {
  id: _propTypes["default"].string,
  idPrefix: _propTypes["default"].string,
  type: _propTypes["default"].oneOf(['linear', 'radial']),
  spreadMethod: _propTypes["default"].oneOf(['pad', 'repeat', 'reflect']),
  gradientUnits: _propTypes["default"].oneOf(['userSpaceOnUse', 'objectBoundingBox']),
  gradientTransform: _propTypes["default"].string,
  // for linear gradient
  from: propTypePoint,
  to: propTypePoint,
  // for radial gradient
  center: propTypePoint,
  focalPoint: propTypePoint,
  cx: propTypeNumber,
  cy: propTypeNumber,
  fx: propTypeNumber,
  fy: propTypeNumber,
  r: propTypeNumber,
  x1: propTypeNumber,
  y1: propTypeNumber,
  x2: propTypeNumber,
  y2: propTypeNumber,
  radius: propTypeNumber,
  children: _propTypes["default"].node
};
Gradient.defaultProps = {
  type: 'linear',
  idPrefix: 'chartGradient',
  gradientUnits: 'objectBoundingBox',
  spreadMethod: 'pad',
  // for linear gradient
  from: ['0%', '0%'],
  to: ['100%', '0%'],
  // for radial gradient
  center: ['50%', '50%']
};