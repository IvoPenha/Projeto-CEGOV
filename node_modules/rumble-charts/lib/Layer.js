"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _normalizeNumber = _interopRequireDefault(require("./helpers/normalizeNumber"));

var _getCoords2 = _interopRequireDefault(require("./helpers/getCoords"));

var _proxyChildren = _interopRequireDefault(require("./helpers/proxyChildren"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Creates a new layer using specific `width` and `height` at specific `position`. It's useful when
 * you have two or more graphics on the same chart. Or in case you to have a margins.
 *
 * @example ../docs/examples/Layer.md
 */
var Layer = /*#__PURE__*/function (_Component) {
  _inherits(Layer, _Component);

  var _super = _createSuper(Layer);

  function Layer(props) {
    var _this;

    _classCallCheck(this, Layer);

    _this = _super.call(this, props);
    _this.getWidth = _this.getWidth.bind(_assertThisInitialized(_this));
    _this.getHeight = _this.getHeight.bind(_assertThisInitialized(_this));
    _this.getCoords = _this.getCoords.bind(_assertThisInitialized(_this));
    return _this;
  } // helpers


  _createClass(Layer, [{
    key: "getWidth",
    value: function getWidth() {
      var _this$props = this.props,
          width = _this$props.width,
          layerWidth = _this$props.layerWidth;
      return (0, _normalizeNumber["default"])(width, layerWidth);
    }
  }, {
    key: "getHeight",
    value: function getHeight() {
      var _this$props2 = this.props,
          height = _this$props2.height,
          layerHeight = _this$props2.layerHeight;
      return (0, _normalizeNumber["default"])(height, layerHeight);
    }
  }, {
    key: "getCoords",
    value: function getCoords() {
      var _this$props3 = this.props,
          position = _this$props3.position,
          layerWidth = _this$props3.layerWidth,
          layerHeight = _this$props3.layerHeight;
      return (0, _getCoords2["default"])(position, layerWidth, layerHeight, this.getWidth(), this.getHeight());
    } // render

  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          className = _this$props4.className,
          scaleX = _this$props4.scaleX,
          scaleY = _this$props4.scaleY,
          style = _this$props4.style;
      var layerWidth = this.getWidth();
      var layerHeight = this.getHeight();

      var _this$getCoords = this.getCoords(),
          x = _this$getCoords.x,
          y = _this$getCoords.y;

      var children = (0, _proxyChildren["default"])(this.props.children, this.props, {
        layerWidth: layerWidth,
        layerHeight: layerHeight,
        scaleX: scaleX,
        scaleY: scaleY
      });
      return _react["default"].createElement("g", {
        className: className,
        transform: 'translate(' + x + ' ' + y + ')',
        style: style
      }, children);
    }
  }]);

  return Layer;
}(_react.Component);

exports["default"] = Layer;
Layer.displayName = 'Layer';
Layer.propTypes = {
  className: _propTypes["default"].string,
  style: _propTypes["default"].object,
  width: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  height: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  position: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].string]),
  series: _propTypes["default"].array,
  scaleX: _propTypes["default"].object,
  scaleY: _propTypes["default"].object,
  layerWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  layerHeight: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
  children: _propTypes["default"].node
};
Layer.defaultProps = {
  width: '100%',
  height: '100%',
  position: 'middle center'
};