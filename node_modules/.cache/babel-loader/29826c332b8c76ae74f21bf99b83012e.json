{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Chart;\n\nvar _omit2 = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _defaults2 = _interopRequireDefault(require(\"lodash/defaults\"));\n\nvar _map2 = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _d3Scale = require(\"d3-scale\");\n\nvar _proxyChildren = _interopRequireDefault(require(\"./helpers/proxyChildren\"));\n\nvar _normalizeNumber = _interopRequireDefault(require(\"./helpers/normalizeNumber\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"./helpers/propTypes\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * Every chart should start with `<Chart>` component. It serves to set sizes (`width` and `height`)\n * and to wrap all another components:\n * - [Graphics](#graphics)\n * - [Wrappers](#wrappers)\n * - [Helpers](#helpers)\n *\n * Also read more about [hidden props](#magic--hidden-props).\n *\n * @example ../docs/examples/Chart.md\n */\n\n\nfunction Chart(props) {\n  var viewBox = props.viewBox;\n  var width = props.width,\n      height = props.height,\n      layerWidth = props.layerWidth,\n      layerHeight = props.layerHeight;\n  width = width || layerWidth;\n  height = height || layerHeight;\n\n  if (viewBox) {\n    var viewBoxTotal = (0, _map2[\"default\"])(viewBox.split(' '), function (value) {\n      return parseInt(value);\n    });\n    width = width || viewBoxTotal[2];\n    height = height || viewBoxTotal[3];\n  }\n\n  var children = (0, _proxyChildren[\"default\"])(props.children, props, {\n    layerWidth: width,\n    layerHeight: height,\n    scaleX: (0, _defaults2[\"default\"])({}, props.scaleX, {\n      direction: 1,\n      paddingStart: 0.5,\n      paddingEnd: 0.5,\n      paddingLeft: 0,\n      paddingRight: 0,\n      factory: function factory(props) {\n        var _props$scaleX = props.scaleX,\n            paddingStart = _props$scaleX.paddingStart,\n            paddingEnd = _props$scaleX.paddingEnd,\n            paddingLeft = _props$scaleX.paddingLeft,\n            paddingRight = _props$scaleX.paddingRight,\n            direction = _props$scaleX.direction,\n            swap = _props$scaleX.swap;\n        var layerWidth = props.layerWidth,\n            layerHeight = props.layerHeight;\n\n        if (swap) {\n          layerWidth = layerHeight;\n        }\n\n        var minX = props.minX - paddingStart;\n        var maxX = props.maxX + paddingEnd;\n        return (0, _d3Scale.scaleLinear)().range([(0, _normalizeNumber[\"default\"])(paddingLeft, layerWidth), layerWidth - (0, _normalizeNumber[\"default\"])(paddingRight, layerWidth)]).domain(direction >= 0 ? [minX, maxX] : [maxX, minX]);\n      }\n    }),\n    scaleY: (0, _defaults2[\"default\"])({}, props.scaleY, {\n      direction: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      factory: function factory(props) {\n        var _props$scaleY = props.scaleY,\n            paddingStart = _props$scaleY.paddingStart,\n            paddingEnd = _props$scaleY.paddingEnd,\n            paddingBottom = _props$scaleY.paddingBottom,\n            paddingTop = _props$scaleY.paddingTop,\n            direction = _props$scaleY.direction,\n            swap = _props$scaleY.swap;\n        var layerWidth = props.layerWidth,\n            layerHeight = props.layerHeight;\n\n        if (swap) {\n          layerHeight = layerWidth;\n        }\n\n        var minY = props.minY - paddingStart;\n        var maxY = props.maxY + paddingEnd;\n        return (0, _d3Scale.scaleLinear)().range([layerHeight - (0, _normalizeNumber[\"default\"])(paddingBottom, layerHeight), (0, _normalizeNumber[\"default\"])(paddingTop, layerHeight)]).domain(direction >= 0 ? [minY, maxY] : [maxY, minY]);\n      }\n    })\n  });\n  var Tag = props.tag;\n  return _react[\"default\"].createElement(Tag, _extends({}, (0, _omit2[\"default\"])(props, ['series', 'tag', 'children', 'minX', 'maxX', 'minY', 'maxY', 'scaleX', 'scaleY', 'layerWidth', 'layerHeight']), {\n    viewBox: viewBox || \"0 0 \".concat(width, \" \").concat(height)\n  }), children);\n}\n\nChart.displayName = 'Chart';\nChart.propTypes = {\n  /**\n   * Chart width (pixels)\n   */\n  width: _propTypes[\"default\"].number,\n\n  /**\n   * Chart height (pixels)\n   */\n  height: _propTypes[\"default\"].number,\n\n  /**\n   * Chart SVG viewBox.\n   * Using that property user can make the chart responsive using CSS\n   * Example: svg { width: 100%; height: auto; }\n   */\n  viewBox: _propTypes[\"default\"].string,\n\n  /**\n   * Layer width (pixels). Useful when you want to make a responsive chart using viewBox prop, but\n   * don't want to specify width of svg tag.\n   */\n  layerWidth: _propTypes[\"default\"].number,\n\n  /**\n   * Layer height (pixels). Useful when you want to make a responsive chart using viewBox prop, but\n   * don't want to specify height of svg tag.\n   */\n  layerHeight: _propTypes[\"default\"].number,\n\n  /**\n   * An array of series objects. Read more [about series](#series). (or docs/series.md)\n   */\n  series: _propTypes2[\"default\"].series,\n\n  /**\n   * It can be change to `\"g\"`, if you want to include your chart inside another svg graphic.\n   */\n  tag: _propTypes[\"default\"].string,\n\n  /**\n   * Rumble-charts components (one or more) or any other valid svg tag\n   * (i.e. `<defs>`, `<g>`, `<rect>`, `<circle>` etc)\n   */\n  children: _propTypes[\"default\"].node,\n\n  /**\n   * Optional limit, affects on how graphics will be drawn. It's calculated automatically based on\n   * `series` you've supplied, but sometimes you will need to define it by yourself.\n   * Especially it relates to `minY` property. Very often you have to set it as `minY={0}`.\n   */\n  minX: _propTypes[\"default\"].number,\n\n  /**\n   * See above\n   */\n  maxX: _propTypes[\"default\"].number,\n\n  /**\n   * See above\n   */\n  minY: _propTypes[\"default\"].number,\n\n  /**\n   * See above\n   */\n  maxY: _propTypes[\"default\"].number,\n\n  /**\n   * X-scale (horizontal) attributes. For better understanding see examples below.\n   */\n  scaleX: _propTypes[\"default\"].shape({\n    /**\n     * 1 or -1, default value is 1\n     */\n    direction: _propTypes[\"default\"].number,\n\n    /**\n     * Padding at the start of the scale domain, default value is 0.5\n     */\n    paddingStart: _propTypes[\"default\"].number,\n\n    /**\n     * Padding at the end of the scale domain, default value is 0.5\n     */\n    paddingEnd: _propTypes[\"default\"].number,\n\n    /**\n     * Left padding in pixels, default value is 0\n     */\n    paddingLeft: _propTypes[\"default\"].number,\n\n    /**\n     * Right padding in pixels, default value is 0\n     */\n    paddingRight: _propTypes[\"default\"].number,\n    factory: _propTypes[\"default\"].func,\n    swap: _propTypes[\"default\"][\"boolean\"]\n  }),\n\n  /**\n   * Y-scale (vertical) attributes. For better understanding see examples below.\n   */\n  scaleY: _propTypes[\"default\"].shape({\n    /**\n     * 1 or -1, default value is 1\n     */\n    direction: _propTypes[\"default\"].number,\n\n    /**\n     * Padding at the start of the scale domain, default value is 0\n     */\n    paddingStart: _propTypes[\"default\"].number,\n\n    /**\n     * Padding at the end of the scale domain, default value is 0\n     */\n    paddingEnd: _propTypes[\"default\"].number,\n\n    /**\n     * Top padding in pixels, default value is 0\n     */\n    paddingTop: _propTypes[\"default\"].number,\n\n    /**\n     * Bottom padding in pixels, default value is 0\n     */\n    paddingBottom: _propTypes[\"default\"].number,\n    factory: _propTypes[\"default\"].func,\n    swap: _propTypes[\"default\"][\"boolean\"]\n  })\n};\nChart.defaultProps = {\n  series: [],\n  tag: 'svg'\n};","map":{"version":3,"sources":["C:/Users/ivoxp/OneDrive/Documentos/Projeto estagio/Projeto/meuprojeto/node_modules/rumble-charts/lib/Chart.js"],"names":["Object","defineProperty","exports","value","Chart","_omit2","_interopRequireDefault","require","_defaults2","_map2","_react","_propTypes","_d3Scale","_proxyChildren","_normalizeNumber","_propTypes2","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","props","viewBox","width","height","layerWidth","layerHeight","viewBoxTotal","split","parseInt","children","scaleX","direction","paddingStart","paddingEnd","paddingLeft","paddingRight","factory","_props$scaleX","swap","minX","maxX","scaleLinear","range","domain","scaleY","paddingTop","paddingBottom","_props$scaleY","minY","maxY","Tag","tag","createElement","concat","displayName","propTypes","number","string","series","node","shape","func","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Chart;\n\nvar _omit2 = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _defaults2 = _interopRequireDefault(require(\"lodash/defaults\"));\n\nvar _map2 = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _d3Scale = require(\"d3-scale\");\n\nvar _proxyChildren = _interopRequireDefault(require(\"./helpers/proxyChildren\"));\n\nvar _normalizeNumber = _interopRequireDefault(require(\"./helpers/normalizeNumber\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"./helpers/propTypes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * Every chart should start with `<Chart>` component. It serves to set sizes (`width` and `height`)\n * and to wrap all another components:\n * - [Graphics](#graphics)\n * - [Wrappers](#wrappers)\n * - [Helpers](#helpers)\n *\n * Also read more about [hidden props](#magic--hidden-props).\n *\n * @example ../docs/examples/Chart.md\n */\nfunction Chart(props) {\n  var viewBox = props.viewBox;\n  var width = props.width,\n      height = props.height,\n      layerWidth = props.layerWidth,\n      layerHeight = props.layerHeight;\n  width = width || layerWidth;\n  height = height || layerHeight;\n\n  if (viewBox) {\n    var viewBoxTotal = (0, _map2[\"default\"])(viewBox.split(' '), function (value) {\n      return parseInt(value);\n    });\n    width = width || viewBoxTotal[2];\n    height = height || viewBoxTotal[3];\n  }\n\n  var children = (0, _proxyChildren[\"default\"])(props.children, props, {\n    layerWidth: width,\n    layerHeight: height,\n    scaleX: (0, _defaults2[\"default\"])({}, props.scaleX, {\n      direction: 1,\n      paddingStart: 0.5,\n      paddingEnd: 0.5,\n      paddingLeft: 0,\n      paddingRight: 0,\n      factory: function factory(props) {\n        var _props$scaleX = props.scaleX,\n            paddingStart = _props$scaleX.paddingStart,\n            paddingEnd = _props$scaleX.paddingEnd,\n            paddingLeft = _props$scaleX.paddingLeft,\n            paddingRight = _props$scaleX.paddingRight,\n            direction = _props$scaleX.direction,\n            swap = _props$scaleX.swap;\n        var layerWidth = props.layerWidth,\n            layerHeight = props.layerHeight;\n\n        if (swap) {\n          layerWidth = layerHeight;\n        }\n\n        var minX = props.minX - paddingStart;\n        var maxX = props.maxX + paddingEnd;\n        return (0, _d3Scale.scaleLinear)().range([(0, _normalizeNumber[\"default\"])(paddingLeft, layerWidth), layerWidth - (0, _normalizeNumber[\"default\"])(paddingRight, layerWidth)]).domain(direction >= 0 ? [minX, maxX] : [maxX, minX]);\n      }\n    }),\n    scaleY: (0, _defaults2[\"default\"])({}, props.scaleY, {\n      direction: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      factory: function factory(props) {\n        var _props$scaleY = props.scaleY,\n            paddingStart = _props$scaleY.paddingStart,\n            paddingEnd = _props$scaleY.paddingEnd,\n            paddingBottom = _props$scaleY.paddingBottom,\n            paddingTop = _props$scaleY.paddingTop,\n            direction = _props$scaleY.direction,\n            swap = _props$scaleY.swap;\n        var layerWidth = props.layerWidth,\n            layerHeight = props.layerHeight;\n\n        if (swap) {\n          layerHeight = layerWidth;\n        }\n\n        var minY = props.minY - paddingStart;\n        var maxY = props.maxY + paddingEnd;\n        return (0, _d3Scale.scaleLinear)().range([layerHeight - (0, _normalizeNumber[\"default\"])(paddingBottom, layerHeight), (0, _normalizeNumber[\"default\"])(paddingTop, layerHeight)]).domain(direction >= 0 ? [minY, maxY] : [maxY, minY]);\n      }\n    })\n  });\n  var Tag = props.tag;\n  return _react[\"default\"].createElement(Tag, _extends({}, (0, _omit2[\"default\"])(props, ['series', 'tag', 'children', 'minX', 'maxX', 'minY', 'maxY', 'scaleX', 'scaleY', 'layerWidth', 'layerHeight']), {\n    viewBox: viewBox || \"0 0 \".concat(width, \" \").concat(height)\n  }), children);\n}\n\nChart.displayName = 'Chart';\nChart.propTypes = {\n  /**\n   * Chart width (pixels)\n   */\n  width: _propTypes[\"default\"].number,\n\n  /**\n   * Chart height (pixels)\n   */\n  height: _propTypes[\"default\"].number,\n\n  /**\n   * Chart SVG viewBox.\n   * Using that property user can make the chart responsive using CSS\n   * Example: svg { width: 100%; height: auto; }\n   */\n  viewBox: _propTypes[\"default\"].string,\n\n  /**\n   * Layer width (pixels). Useful when you want to make a responsive chart using viewBox prop, but\n   * don't want to specify width of svg tag.\n   */\n  layerWidth: _propTypes[\"default\"].number,\n\n  /**\n   * Layer height (pixels). Useful when you want to make a responsive chart using viewBox prop, but\n   * don't want to specify height of svg tag.\n   */\n  layerHeight: _propTypes[\"default\"].number,\n\n  /**\n   * An array of series objects. Read more [about series](#series). (or docs/series.md)\n   */\n  series: _propTypes2[\"default\"].series,\n\n  /**\n   * It can be change to `\"g\"`, if you want to include your chart inside another svg graphic.\n   */\n  tag: _propTypes[\"default\"].string,\n\n  /**\n   * Rumble-charts components (one or more) or any other valid svg tag\n   * (i.e. `<defs>`, `<g>`, `<rect>`, `<circle>` etc)\n   */\n  children: _propTypes[\"default\"].node,\n\n  /**\n   * Optional limit, affects on how graphics will be drawn. It's calculated automatically based on\n   * `series` you've supplied, but sometimes you will need to define it by yourself.\n   * Especially it relates to `minY` property. Very often you have to set it as `minY={0}`.\n   */\n  minX: _propTypes[\"default\"].number,\n\n  /**\n   * See above\n   */\n  maxX: _propTypes[\"default\"].number,\n\n  /**\n   * See above\n   */\n  minY: _propTypes[\"default\"].number,\n\n  /**\n   * See above\n   */\n  maxY: _propTypes[\"default\"].number,\n\n  /**\n   * X-scale (horizontal) attributes. For better understanding see examples below.\n   */\n  scaleX: _propTypes[\"default\"].shape({\n    /**\n     * 1 or -1, default value is 1\n     */\n    direction: _propTypes[\"default\"].number,\n\n    /**\n     * Padding at the start of the scale domain, default value is 0.5\n     */\n    paddingStart: _propTypes[\"default\"].number,\n\n    /**\n     * Padding at the end of the scale domain, default value is 0.5\n     */\n    paddingEnd: _propTypes[\"default\"].number,\n\n    /**\n     * Left padding in pixels, default value is 0\n     */\n    paddingLeft: _propTypes[\"default\"].number,\n\n    /**\n     * Right padding in pixels, default value is 0\n     */\n    paddingRight: _propTypes[\"default\"].number,\n    factory: _propTypes[\"default\"].func,\n    swap: _propTypes[\"default\"][\"boolean\"]\n  }),\n\n  /**\n   * Y-scale (vertical) attributes. For better understanding see examples below.\n   */\n  scaleY: _propTypes[\"default\"].shape({\n    /**\n     * 1 or -1, default value is 1\n     */\n    direction: _propTypes[\"default\"].number,\n\n    /**\n     * Padding at the start of the scale domain, default value is 0\n     */\n    paddingStart: _propTypes[\"default\"].number,\n\n    /**\n     * Padding at the end of the scale domain, default value is 0\n     */\n    paddingEnd: _propTypes[\"default\"].number,\n\n    /**\n     * Top padding in pixels, default value is 0\n     */\n    paddingTop: _propTypes[\"default\"].number,\n\n    /**\n     * Bottom padding in pixels, default value is 0\n     */\n    paddingBottom: _propTypes[\"default\"].number,\n    factory: _propTypes[\"default\"].func,\n    swap: _propTypes[\"default\"][\"boolean\"]\n  })\n};\nChart.defaultProps = {\n  series: [],\n  tag: 'svg'\n};"]},"metadata":{},"sourceType":"script"}